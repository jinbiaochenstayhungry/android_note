# 编码基础知识
  ** 术语解释
    * 码率（bps）
    单位时间（秒）内传输的数据编码的大小

    * 帧率（fps）
    单位时间（秒）内帧数的大小（一个帧是一个画面，其中包括，采集源数据的帧率，编码帧率，解码帧率）

  ** 编码格式
    * 头部，每个帧都需要加载最前面 0x00 0x00 0x00 0x01 或者 0x00 0x00 0x01
    * SPS帧   0x27 0 0 1(重要程度) 0 0 1 1 1（帧类型）
    * PPS帧   0x28 0 0 1(重要程度) 0 1 0 0 0（帧类型）
    * SEI帧   0x06 0 0 0(重要程度) 0 0 1 1 0（帧类型）
    * IDR帧(I帧)   0x25 0 0 1(重要程度) 0 0 1 0 1（帧类型）
    * P帧    0x21 0 0 1(重要程度) 0 0 0 0 1（帧类型）
    * B帧    0x21 0 0 0(重要程度) 0 0 0 0 1（帧类型）

    * 一般直播流编码格式：
    SPS,PPS,SEI,IDR,P,P.....,SEI,IDR,P,P


# 项目结构

  ** App端
   
    * P2PListenerController.java:p2p总连接控制器（单例），用于连接Camera端设备和断开连接设备，连接状态变化和命令的接收处理事件
    只做分发，不做处理

    * P2PConnectController.java:p2p连接控制器，用于管理某一个与Camera端的连接，处理连接变化和命令的接收处理事件，
    并且分发事件到JS端

    * CustomCameraDetailScreen.js:播放的详情页面

    * CustomCameraModule.java:暴露给js调用的原生module

    * CustomViewController.java:控制需要播放的视图的类

    * CameraView.java:需要渲染画面的View类

  ** Camera端

    * P2PListener.java:p2p连接管理类（单例），用于初始化sdk连接p2p服务器，监听等待App端连接，命令的发送，音视频数据的发送

    * CameraUtil.java:摄像头管理类（单例）,用于开启关闭摄像头，获取视频源数据

    * AvcEncoder.java:编码器类，用于编码视频数据

    * MainAvtivity.java:主界面，控制播放暂停等业务逻辑相关

# P2P基础知识
  ** 基本概念
    * 客户端设备会连接上服务器，通过服务器的帮助两个客户端设备可以进行P2P打洞，打洞成功之后，两个客户端设备
    可以进行自由通讯。

  ** 尚云P2P通讯步骤
    * 客户端设备连接到尚云的服务器（initSDK）
    * 调用Listen监听等待连接过来的设备（每一个需要监听等待的设备都必须有一个DID，一个PWD，DID即P2P通讯唯一
    标识，通过手机唯一标识IMEI调用易微联服务器接口获取）
    * 调用connect主动连接某一个客户端设备
    * 调用read来读取某一信道中的数据
    * 调用write来写入某一信道数据

  ** 自定义命令

    * 创建命令
      创建一个类，创建下列方法：
      1）构造方法：通过传入的byte[] 填入数据到对象中
      2）创建buffer静态方法：通过传入的要传输的数据，生成一个byte[] 并且返回
      3）命令长度静态方法：一般写死命令长度，也可根据参数来计算长度，但这不利于从信道中read出buffer数据
      4）命令号（静态16进制值，如0x701,建议从0x702以后，当前自定义命令已使用701和702）
      命令协议必须要在类文件中注释，并且App端与Camera端同步，完全一致

    * App端
      1）封装到CMD_HEAD类中（该类已封装好）
      2）在P2PConnectController类中的onReceiveCMD回调中接收命令做处理

    * Camera端
      1）创建CMD_HEAD对象，填入相关数据
      2）创建自定义命令的Byte[] 
      3）创建新的byte[] 填入CMD_HEAD对象的byte数据
      4）填入自定义命令的byte
      5）调用write方法发送数据到信道
      6）在P2PListener中的P2PCommodListenRunnable中处理

# 注意事项
  ** 采集的源数据的宽高必须和编码的宽高一直，否则会引起绿屏

  ** 采集源数据的时候需要设置帧率，在设置帧率前要获取设备支持帧率的范围，并且选择合适的设置，如果不符合支持的范围的话
  部分手机机型或者系统版本会闪退，有的会自适应

  ** 

